/*1179 - 【入门】求N个整数的平均数、众数和中位数
题目描述
求N个整数的平均数，众数和中位数。
小知识：
众数
　如有9个数：17 13 17 9 17 17 3 16 17 　17出现的次数最多，即为这组数的众数。
（本题确保测试数据中，出现次数最多的数只有一个） 中位数 　如有9个数：102 170 96
90 97 106 110 182 100 　将这9个数按一定的顺序（从大到小或从小到大）排列后得到：
 　182 170 110 106 102 100 97 96 90 　正中间的一个数是102，102是这组数的中位数。
 　而这10个数：106 99 104 120 107 112 33 102 97 100
 　按一定顺序排列后得到：120 112 107 106 104 102 100 99 97 33
 　正中间有两个数：104 102，中位数就是这两个数的平均数，即（104+102）/ 2 = 103。

输入
第一行为整数N（5 <= N <= 10000 ) 第二行为空格隔开的N个数Ai（0 <= Ai <= 100 )
输出
输出空格隔开的平均数 众数 中位数（平均数保留两位小数，中位数保留一位小数）。

样例
输入
6
5 2 2 3 4 6
输出
3.67 2 3.5
来源
数组问题

标签
数组问题
*/
#include <bits/stdc++.h>
using namespace std;
int main() {
  int n, x;
  cin >> n;
  int a[n], b[101] = {0}, sum = 0, mode,
            c = 0;  // mode：众数，c:众数出现次数
  float mid;        // mid:中位数
  for (int i = 0; i < n; i++) {
    cin >> x;
    sum += x;
    a[i] = x;
    b[x]++;
  }
  cout << fixed << setprecision(2) << sum * 1.0 / n << " ";
  for (int i = 0; i < 101; i++) {
    if (b[i] > c) {
      c = b[i];
      mode = i;
    }
  }
  cout << mode << " ";
  for (int i = 0; i < n - 1; i++) {
    for (int j = 0; j < n - i - 1; j++) {
      if (a[j] > a[j + 1]) {
        int t = a[j];
        a[j] = a[j + 1];
        a[j + 1] = t;
        // swap(a[j], a[j + 1]);
      }
    }
  }
  // sort(a, a + n);
  if (n % 2 == 0) {
    mid = (a[n / 2] + a[n / 2 - 1]) / 2.0;
  } else {
    mid = a[n / 2] * 1.0;
  }
  cout << fixed << setprecision(1) << mid;
  return 0;
}
