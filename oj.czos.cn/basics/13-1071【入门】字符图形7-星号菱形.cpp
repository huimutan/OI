/* 题目描述
输入一个整数n，请打印出n*2+1行的字符图形。

输入
一个整数（０＜Ｎ＜１０）

输出
一个字符图形，如输入2，则产生5行的菱形（为方便找规律，这里将空格用□替代，实际输出，请输出空格）。

□□×
□×××
×××××
□×××
□□×

样例
输入
2
输出
  *
 ***
*****
 ***
  *
来源
嵌套循环 */

#include <bits/stdc++.h>
using namespace std;
int main()
{
    /*思路：上下对称图形，我们采用先打印一半图形
    然后将一半图形颠倒得到另外一半的方法来实现
    注意：首先要得到一半的图形的实际行数
    */
    int n, i, j;
    cin >> n;
    //一半图形的行数为n+1行
    n = n + 1;
    //先打印正三角
    for (i = 1; i <= n - 1; i++)
    {
        //第i行有n-i个空格
        for (j = 1; j <= n - i; j++)
        {
            cout << " ";
        }
        //第i行有2 * i - 1个星
        for (j = 1; j <= 2 * i - 1; j++)
        {
            cout << "*";
        }
        cout << endl;
    }
    //颠倒正三角得到倒三角
    for (i = n; i >= 1; i--)
    {
        //第i行有n-i个空格
        for (j = 1; j <= n - i; j++)
        {
            cout << " ";
        }
        //第i行有2 * i - 1个星
        for (j = 1; j <= 2 * i - 1; j++)
        {
            cout << "*";
        }
        cout << endl;
    }
}