/*1130 - 【入门】简单a+b
题目描述
张晓菲同学做了简单的ab求和的问题。但是，如果要求输入的情况不是a和b，而是整个加法表达式呢？
请想办法，计算加法表达式的结果。

输入
输入一个加法表达式，如1+2=，或者23+58=。（注意：做加法的2个整数都在0~109的范围内）

输出
计算出输入表达式的正确结果

样例
输入
1+2=
输出
3
来源
字符串

标签
字符串
*/
#include <bits/stdc++.h>
using namespace std;
//将给定的字符数组存储的整数,转换为整数格式
// char s[] = "1234" -> int x = 1234 =4*1+3*10+2*100+1*1000
int num(char s[]) {
  int r = 0;
  int t = 1;  //表示10的n次方也就是1 10 100 1000
  for (int i = strlen(s) - 1; i >= 0; i--) {
    r = r + (s[i] - '0') * t;
    t = t * 10;
  }
  return r;
}
int main() {
  /*'第一步:分解并输出求和的2个整数(整数以字符数组的形式进行存储) 求出+的下标
  将+之前的字符拷贝给si, +之后的字符拷贝给S2
  第二步:将2个字符数组存储的整数,转换为实际的整数格式
  第三步:求和
  */
  char s[100], sl[50] = {'\0'}, s2[50] = {'\0'};
  int p;
  cin >> s;
  // 234+5678=
  //求+的下标
  for (int i = 0; i < strlen(s); i++) {
    if (s[i] == '+') {
      p = i;
      break;
    }
  }
  // cout<<p<<endl;
  //拷贝+左侧的数字
  for (int i = 0; i < p; i++) {
    sl[i] = s[i];
  }
  //拷贝+右侧的数字	一
  int k = 0;  //表示s2的下标
  for (int i = p + 1; i < strlen(s) - 1; i++) {
    s2[k] = s[i];
    k++;
  }
  // cout<<num(sl)<<" "<<num(s2)<<endl;
  cout << num(sl) + num(s2) << endl;
}