/*【入门】轴对称三角形
题目描述
在数学上，我们发现有一类图形是对称图形。我们对于左右一样的图形叫做沿y轴对称，对于上下一样的图形叫做沿x轴对称。
如下图所示的图形就是沿y轴对称的两个三角形：
    *        *
   ***      ***
  *****    *****
 *******  *******
******************
而下图所示的图形就是沿x轴对称的两个三角形：
    *
   ***
  *****
 *******
*********
*********
 *******
  *****
   ***
    *
 请从键盘读入一个整数n，代表三角形的行数，再读入一个字符，该字符为’x’或者’y’，
 代表是沿x轴对称还是沿y轴对称，输出对应的轴对称图形。（8.1）

输入
第一样是一个整数n（n <= 10）
第二行是一个字符（字符’x’或者字符’y’）

输出
按照要求输出的轴对称图形

样例
输入
5
x
输出
    *
   ***
  *****
 *******
*********
*********
 *******
  *****
   ***
    *
*/
#include <bits/stdc++.h>
using namespace std;
int main() {
  int n;
  char z;
  cin >> n >> z;
  if (z == 'x') {
    for (int i = 1; i <= n; i++) {  // n-i个空格
      for (int j = 1; j <= n - i; j++) {
        cout << " ";
      }
      for (int j = 1; j <= i * 2 - 1; j++) {  // 2*i-1个星
        cout << "*";
      }
      cout << endl;
    }
    //将上面的三角倒过来
    for (int i = n; i >= 1; i--) {
      for (int j = 1; j <= n - i; j++) {
        cout << " ";
      }
      for (int j = 1; j <= i * 2 - 1; j++) {
        cout << "*";
      }
      cout << endl;
    }
  } else {
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n - i; j++) {  // n-i个空格
        cout << " ";
      }
      for (int j = 1; j <= i * 2 - 1; j++) {  // 2*i-1个星
        cout << "*";
      }
      for (int j = 1; j <= 2 * (n - i); j++) {  // 2*(n - i)空格
        cout << " ";
      }
      for (int j = 1; j <= i * 2 - 1; j++) {  // 2*i-1个星
        cout << "*";
      }
      cout << endl;
    }
  }
  return 0;
}
