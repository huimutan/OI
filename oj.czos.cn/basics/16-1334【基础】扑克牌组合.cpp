/*1334 - 【基础】扑克牌组合
题目描述
小明从一副扑克牌中（没有大小王，J认为是数字11，Q是12，K是13，A是1）
抽出2张牌求和，请问能够组合出多少个不相等的数，按照由小到大输出这些数。（5.1.98）

输入
第一行是一个整数n代表（n<=52）扑克牌的总数量
第二行的n个整数分别代表扑克牌的数值

输出
第一行是一个整数m代表组合出不相等的数字个数。
第二行m个数用空格隔开代表这m个由小到大排序的不相等的数。

样例
输入
4
3 1 2 4
输出
5
3 4 5 6 7
来源
数组问题

标签
数组问题
*/
#include <bits/stdc++.h>
using namespace std;
int main() {
  int n, c = 0;
  cin >> n;
  int a[n];
  for (int i = 1; i <= n; i++) cin >> a[i];
  int b[27] = {0};
  for (int i = 1; i < n; i++) {
    for (int j = i + 1; j <= n; j++) {
      b[a[i] + a[j]]++;
      if (b[a[i] + a[j]] == 1) c++;  //如果a[i]+a[j]这个数是第一次出现
    }
  }
  cout << c << endl;
  for (int i = 2; i <= 26; i++) {
    if (b[i] > 0) cout << i << " ";
  }
  return 0;
}
