/*1315 - 【入门】遥控飞机争夺赛
题目描述
红太阳杯遥控飞机大赛拉开帷幕。比赛规则为，每位选手让自己的飞机从起点到终点飞行5次，组委会记录5次的飞行的成绩之后去掉一个最大成绩、一个最小成绩后计算剩余3个成绩的平值（平均分保留3位小数）作为该选手的最终成绩。
有n名选手参加了比赛，从键盘读入每位选手的编号以及他们的5次飞行的成绩。
请根据n名选手的比赛成绩，编程计算出冠军、亚军、季军的编号以及组委会计算出的成绩。（假设不存在多名选手成绩正好一样）（4.1.51）

输入
第一行为一个整数n，代表参加比赛的选手数量（n>=4 && n<=100）
后面的n行，每行有6个数，第一个数是选手的编号，后5个数为选手的5次飞行的成绩

输出
3行，第一行输出冠军的编号及飞行成绩（保留3位小数）用空格隔开2个数；第二行输出亚军的编号及飞行成绩，第三行输出季军的编号及飞行成绩

样例
输入
4
11 58 59 60 61 62
18 59 60 61 62 63
23 65 64 63 62 62
10 60 61 61 65 62
输出
23 63.000
10 61.333
18 61.000
来源
二维数组 容器 结构体

标签
二维数组容器结构体
*/
#include <bits/stdc++.h>
using namespace std;
int main() {
  int a[100][6] = {0}, num[100] = {0}, max, min, sum;
  double avg[100] = {0};  //存储平均分
  int i, j, n;
  cin >> n;
  for (i = 0; i < n; i++) {
    //读入6个数据
    for (j = 0; j < 6; j++) {
      cin >> a[i][j];
    }
    //求出均分
    max = a[i][1];
    min = a[i][1];
    sum = 0;
    for (j = 1; j < 6; j++) {
      sum = sum + a[i][j];
      if (a[i][j] > max) {
        max = a[i][j];
      }
      if (a[i][j] < min) {
        min = a[i][j];
      }
    }
    //存储平均分
    avg[i] = (sum - max - min) * 1.0 / 3;
    //存储编号
    num[i] = a[i][0];
  }
  /*   for (i = 0; i < n; i++) {
      cout << num[i] << " " << avg[i] << endl;
    } */
  //对于均分s数组按照由大到小排序(交换s数组元素的同时,交换num数组的元素)
  for (i = 1; i < n; i++) {
    for (j = 0; j <= n - i - 1; j++) {
      if (avg[j] < avg[j + 1]) {
        swap(avg[j], avg[j + 1]);  //交换变量的值
        swap(num[j], num[j + 1]);
      }
    }
  }
  //输出前3名
  for (i = 0; i < 3; i++) {
    cout << num[i] << " " << fixed << setprecision(3) << avg[i] << endl;
  }
}