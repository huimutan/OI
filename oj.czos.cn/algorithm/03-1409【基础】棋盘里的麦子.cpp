/*1409 - 【基础】棋盘里的麦子？
题目描述
传说西塔发明了国际象棋而使国王十分高兴，他决定要重赏西塔，西塔说：“我不要你的重赏
，陛下，只要你在我的棋盘上赏一些麦子就行了。在棋盘的第1个格子里放1粒，在第2个格子里放2粒，在第3个格子里放4粒，在第4个格子里放8粒，依此类推，以后每一个格子里放的麦粒数都是前一个格子里放的麦粒数的2倍，直到放满第64个格子就行了”。“区区小数，几粒麦子，这有何难，来人”，国王令人如数付给西塔。
计数麦粒的工作开始了，第一格内放1粒，第二格内放2粒第三格内放4粒，…还没有到第二十格，一袋麦子已经空了。一袋又一袋的麦子被扛到国王面前来。但是，麦粒数一格接一格飞快增长着，国王很快就看出，即便拿出全国的粮食，也兑现不了他对西塔的诺言。
请你编程帮助国王计算出，第n个棋盘格子中需要放多少粒麦子？

输入
一个整数N代表第n格棋盘（n<=100）
输出
一个整数，代表第n格棋盘中麦子的总数。


样例
输入
3
输出
4
来源
高精度算法

标签
高精度算法
*/
#include <bits/stdc++.h>
using namespace std;
int a[1000] = {1}, ak = 1, n;
int main() {
  cin >> n;
  for (int i = 1; i < n; i++) {
    for (int j = 0; j < ak; j++) a[j] *= 2;  //逐位乘
    for (int j = 0; j < ak; j++) {           //进位
      if (a[j] >= 10) {
        a[j + 1] += a[j] / 10;
        a[j] %= 10;
      }
    }
    if (a[ak] != 0) ak++;  //判断进的位数
  }
  for (int i = ak - 1; i >= 0; i--) cout << a[i];  //逆序输出
  return 0;
}
