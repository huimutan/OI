/*1286 - 【基础】高精度乘单精度
题目描述
高精度乘单精度，a*b。
a是一个很大的非负整数，但不超过240位，b是一个非负整数不超过10000，求a*b。

输入
两行数字。
第一行是a，第二行是b。

输出
一行，输出a * b的计算结果。

样例
输入
111111111111111111111111111111111111
10
输出
1111111111111111111111111111111111110
来源
高精度算法

标签
高精度算法
*/
#include <bits/stdc++.h>
using namespace std;
/*
1.将高精度整数s1逆序存储
2.将a数组逐位乘b，结果存入c数组
3.进位
4.逆序从第1个非0开始打印，要注意多考虑4位 (b是一个非负整数不超过10000)
*/
string s1;
int a[210], b, c[210];

int main() {
  cin >> s1 >> b;

  // 1.逆序存储
  for (int i = 0; i < s1.size(); i++) {
    a[i] = s1[s1.size() - i - 1] - '0';
  }

  // 2.逐位相乘
  for (int i = 0; i < s1.size(); i++) {
    c[i] = a[i] * b;
  }

  // 3.逐位进位
  for (int i = 0; i < s1.size() + 4; i++) {
    if (c[i] >= 10) {
      c[i + 1] = c[i + 1] + c[i] / 10;
      c[i] = c[i] % 10;
    }
  }

  // 4.逆序从第1个非0开始打印
  int p = 0;
  for (int i = s1.size() + 4 - 1; i >= 0; i--) {
    if (c[i] != 0) {
      p = i;
      break;
    }
  }

  for (int i = p; i >= 0; i--) {
    cout << c[i];
  }
  return 0;
}