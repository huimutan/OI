/*1113 - 【基础】隐藏的最大整数
题目描述
今天是个好日子，整数小伙伴们又一起出来聚会了。大家商议决定：今天玩捉迷藏！
玩法很简单，就是把藏在一个长长的字符串中（任何两个人都不会并排藏在一起）数字伙伴找出来。而且，因为伙伴们太多，只找到此次藏起来的最大的那个伙伴就可以了。并且，大家一致同意，让“1”做第一个找人的人――当然，事先，他并不知道到底有哪些伙伴藏起来了……
游戏开始了。

“1”是一个很聪明的人，很快，他就把最大的那个伙伴找出来了……
如果你是“1”，你能写个程序来解决这件事情么？

请注意：隐藏在字符串中的整数不会以0开头，也就是不存在这种字符串\*a032AB342，且读入的字符串不含空格。

输入
只有一个字符串，这里面藏有很多的整数小伙伴。（字符串长度≤100，且不含空格）
测试数据中不存在多个一样大的整数，且测试数据中包含的整数可能超过20位。

输出
只有一个整数，表示藏在其中的最大的那个整数小伙伴的位置（整数第一个数字在原串中的位置）。

样例
输入
*((*-a32AB342+//32143abAA
输出
17
来源
字符串

标签
字符串
*/
#include <bits/stdc++.h>
using namespace std;
int main() {
  string s, w = "";
  int lei = INT_MIN;
  cin >> s;
  for (int i = 0; i < s.size(); i++) {
    if (isdigit(s[i])) {
      w += s[i];
    } else {  //打擂台开始
      if (stoi(w) > lei) lei = stoi(w);
      w = "";
    }
  }
  cout << lei;
  return 0;
}
