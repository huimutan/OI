/*1739 - 【基础】迷宫的所有路径
题目描述
已知一N×N的迷宫，允许往上、下、左、右四个方向行走，且迷宫中没有任何障碍，所有的点都可以走。现请你按照右、下、左、上顺序进行搜索，找出从左上角到右下角的所有路径。

输入
输入一个整数N（N<=5）代表迷宫的大小。

输出
按右、下、左、上搜索顺序探索迷宫，输出从左上角1,1点走到右下角N,N点的所有可能的路径。

样例
输入
3
输出
1:1,1->1,2->1,3->2,3->3,3
2:1,1->1,2->1,3->2,3->2,2->3,2->3,3
3:1,1->1,2->1,3->2,3->2,2->2,1->3,1->3,2->3,3
4:1,1->1,2->2,2->2,3->3,3
5:1,1->1,2->2,2->3,2->3,3
6:1,1->1,2->2,2->2,1->3,1->3,2->3,3
7:1,1->2,1->2,2->2,3->3,3
8:1,1->2,1->2,2->3,2->3,3
9:1,1->2,1->2,2->1,2->1,3->2,3->3,3
10:1,1->2,1->3,1->3,2->3,3
11:1,1->2,1->3,1->3,2->2,2->2,3->3,3
12:1,1->2,1->3,1->3,2->2,2->1,2->1,3->2,3->3,3
来源
回溯

标签
回溯
*/
#include <bits/stdc++.h>
using namespace std;
//右、下、左、上
/*
思路：沿着右、下、左、 上的顺序深度优先搜索， 走过的点标记为true
递归其他方向，递归结束， 后退到上一步，撤销标记， 回溯到前一个状态
*/
int n, c;
int r[30][3];    //存储路径
bool f[10][10];  //标记点是否走过
int fx[5] = {0, 0, 1, 0, -1};
int fy[5] = {0, 1, 0, -1, 0};
//输出路径
void print(int k) {
  c++;
  cout << c << ":";
  for (int i = 1; i < k; i++) {
    cout << r[i][1] << "," << r[i][2] << "->";
  }
  cout << n << "," << n << endl;
  int main() { return 0; }
