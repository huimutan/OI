/*1373 - 【基础】删数问题
题目描述
键盘输入一个高精度的正整数n（n<=1000位），去掉其中任意s个数字后剩下的数字按原左右顺序将组成一个新的正整数。编程对给定的n和s（s<n的位数，且数据保证n删除s个数之后不为0，还是一个非0的整数），寻找一种方案，使得剩下的数字组成的数最小。
例如：153748要删除2个数，使得剩下的数字最小，应当删除5和7，得到1348。（注意：1087如果要删除1个数，删除1结果是最小的，得到结果87）

输入
第一行是一个高精度整数n

第二行是需要删除的位数s

输出
最后剩下的最小数

样例
输入
153748
2
输出
1348
来源
贪心

标签
贪心
*/
#include <bits/stdc++.h>
using namespace std;
int n, m;
string s;
int main() {
  cin >> s;
  cin >> n;
  //删除n个数
  for (int i = 1; i <= n; i++) {
    //默认删除最后一个
    m = s.size() - 1;
    for (int j = 0; j < s.size() - 1; j++) {
      //如果找到第一个递减位置
      if (s[j] > s[j + 1]) {
        m = j;
        break;
      }
    }
    s.erase(m, 1);
  }
  //删除前导0
  while (s[0] == '0') {
    s.erase(0, 1);
  }
  cout << s << endl;
  return 0;
}